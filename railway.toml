[build]
builder = "nixpacks"
buildCommand = "cd backend && npm ci --only=production"

[deploy]
startCommand = "cd backend && npm start"
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

[environments.production]
variables = {
  NODE_ENV = "production",
  HOST = "0.0.0.0",
  PORT = "$PORT",
  RATE_LIMITING_ENABLED = "true",
  AI_MODELS_ENABLED = "true",
  CITYPULSE_ENABLED = "true", 
  QUANTUM_SWARM_ENABLED = "true",
  VELOCITY_SWARM_ENABLED = "true",
  WEBSOCKET_ENABLED = "true",
  LOG_LEVEL = "info"
}

[environments.staging]
variables = {
  NODE_ENV = "staging",
  HOST = "0.0.0.0", 
  PORT = "$PORT",
  RATE_LIMITING_ENABLED = "false",
  AI_MODELS_ENABLED = "true",
  CITYPULSE_ENABLED = "true",
  QUANTUM_SWARM_ENABLED = "true", 
  VELOCITY_SWARM_ENABLED = "true",
  WEBSOCKET_ENABLED = "true",
  LOG_LEVEL = "debug"
}

[databases.production]
type = "postgresql"
variables = {
  DATABASE_URL = "$DATABASE_URL",
  SUPABASE_URL = "$SUPABASE_URL",
  SUPABASE_SERVICE_ROLE_KEY = "$SUPABASE_SERVICE_ROLE_KEY"
}

[networking]
allowedHosts = ["*"]

[scaling]
autoscaling = true
minReplicas = 1
maxReplicas = 10
targetCPUUtilization = 70
targetMemoryUtilization = 80

[resources]
cpu = "1000m"  # 1 vCPU
memory = "1Gi"  # 1GB RAM

[monitoring]
healthcheck = true
logs = true
metrics = true

[security]
allowPublicNetworking = true