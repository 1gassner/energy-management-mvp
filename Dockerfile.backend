# Multi-stage production Dockerfile for FlowMind Universal Backend
FROM node:18-alpine AS base

# Install security updates and required packages
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S flowmind -u 1001

WORKDIR /app

# Copy package files
COPY backend/package*.json ./

# Install dependencies
FROM base AS dependencies
RUN npm ci --only=production && npm cache clean --force

# Development stage with dev dependencies
FROM base AS dev-dependencies  
RUN npm ci

# Build stage (if needed for any build steps)
FROM dev-dependencies AS build
COPY backend/src ./src
RUN npm run lint && \
    npm run test --passWithNoTests || true

# Production stage
FROM base AS production

# Copy production dependencies
COPY --from=dependencies /app/node_modules ./node_modules

# Copy application code
COPY backend/src ./src
COPY backend/package*.json ./

# Change ownership to non-root user
RUN chown -R flowmind:nodejs /app
USER flowmind

# Security: Remove write permissions
RUN chmod -R 555 /app/src

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["npm", "start"]